server:
  port: 8080
front-server:
    port: ${DEV_CLIENT_URL}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    url: ${LOCAL_DB_URL}
  jpa:
    properties:
      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true # true, false
        show_sql: true # true, false
    hibernate:
      ddl-auto: validate # create, create-drop, update, validate, none
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui/index.html
    operationsSorter: method
    tagsSorter: alpha
    display-request-duration: true
    doc-expansion: none